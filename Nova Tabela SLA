Dim lotes As Variant


Sub ajustar_tabela()
    ' Excluir a primeira coluna (Coluna A)
    Columns("A:A").Delete Shift:=xlToLeft
    
    ' Aplicar AutoFiltro na primeira linha
    Rows("1:1").AutoFilter
    
    ' Selecionar a área de dados atual
    Selection.CurrentRegion.Select
    
    ' Configurar a ordenação
    With ActiveWorkbook.Worksheets(1).Sort
        .SortFields.Clear
        ' Ordenar pela coluna B em ordem crescente
        .SortFields.Add Key:=Range("B2:B4242"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        ' Ordenar pela coluna C em ordem crescente
        .SortFields.Add Key:=Range("C2:C4242"), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        ' Ordenar pela coluna H em ordem decrescente
        .SortFields.Add Key:=Range("H2:H4242"), SortOn:=xlSortOnValues, Order:=xlDescending, DataOption:=xlSortNormal
        .SetRange Range("A1:T4242")
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    ' Aplicar filtros dinâmicos
    With ActiveSheet.Range("A1:S1")
        .AutoFilter Field:=2, Criteria1:="Entrega" ' Filtrar coluna B por "Entrega"
        .AutoFilter Field:=8, Operator:=xlFilterDynamic, Criteria1:=xlFilterLastMonth ' Filtrar coluna H pelo último mês
    End With
    
    ' Substituir valores vazios por uma data padrão
    Range("E:J").Replace "", "00/01/1900 00:00"
    Range("M:N").Replace "", "00/01/1900 00:00"
    Range("K:K").Replace "", "00:00"
    
    ' Renomear o cabeçalho da coluna J para "Data Fim"
    Range("J1").Value = "Data Fim"
    
    ' Excluir a primeira coluna após modificações
    Columns("A:A").Delete
    
    ' Ajustar automaticamente a largura das colunas
    Cells.EntireColumn.AutoFit
End Sub

Sub exportar_arquivo()
    ' Lista de lotes a serem processados
    lotes = Array("LOTE A SP", "LOTE B", "LOTE C", "LOTE A RJ", "LOTE D", "LOTE E", "LOTE T", "LOTE T (CDC)")
    
    ' Limpar o conteúdo das planilhas dos lotes
    LimparPlanilhas lotes
    
    ' Filtrar e copiar os dados de acordo com os critérios
    FiltrarEColar "SOLUCIONA A SP", "LOTE A SP"
    FiltrarEColar "IMEDIATO B", "LOTE B"
    FiltrarEColar "IMEDIATO C", "LOTE C"
    FiltrarEColar "SOLUCIONA A RJ", "LOTE A RJ"
    FiltrarEColar "Leão Log", "LOTE D"
    FiltrarEColar "RAFER", "LOTE E"
    FiltrarEColar "SOLUCIONA T", "LOTE T"
    FiltrarEColar "LOGICA", "LOTE T (CDC)"
    
    ' Salvar os arquivos com os dados dos lotes
    SalvarArquivo lotes
End Sub

Sub LimparPlanilhas(planilhas As Variant)
    ' Limpar o conteúdo das planilhas fornecidas
    Dim i As Integer
    For i = LBound(planilhas) To UBound(planilhas)
        Sheets(planilhas(i)).Range("A1:AS3000").ClearContents ' Limpa o conteúdo da faixa A1:AS3000
    Next i
End Sub

Sub FiltrarEColar(filtro As String, planilhaDestino As String)
    ' Aplicar o filtro na aba DADOS e copiar os dados para a planilha destino
    Dim tabela_dados As String
    tabela_dados = "1. KPI LTA | CJE | CHS"
    
    With Sheets(tabela_dados)
        .Range("A1:AY1").AutoFilter Field:=23, Criteria1:=filtro ' Aplica o filtro na coluna X (campo 23)
        .Range("A1:AY" & .Cells(.Rows.Count, 3).End(xlUp).Row).SpecialCells(xlCellTypeVisible).Copy ' Copia os dados visíveis filtrados
    End With
    
    Sheets(planilhaDestino).Range("A1").PasteSpecial Paste:=xlPasteValues ' Cola os valores na planilha destino
    
    ' Limpar filtros
    Sheets(tabela_dados).Range("A1:AY1").AutoFilter
End Sub

Sub SalvarArquivo(planilhas As Variant)
    ' Definir o caminho da pasta onde os arquivos serão salvos
    Dim saved_folder As String
    saved_folder = "C:\Users\Administrador\Documents\Alexandre\Lotes\"
    
    ' Salvar cada planilha como um arquivo Excel separado
    Dim worksheet_name As Variant
    Dim new_workbook As Workbook
    
    For Each worksheet_name In planilhas
        On Error GoTo ErroSalvar
        Set new_workbook = Workbooks.Add
        ThisWorkbook.Worksheets(worksheet_name).Copy new_workbook.Worksheets(1)
        new_workbook.SaveAs saved_folder & worksheet_name & ".xlsx", 51 ' Salva o arquivo no formato .xlsx
        new_workbook.Close False
        On Error GoTo 0
    Next worksheet_name
    Exit Sub
    
ErroSalvar:
    ' Mostra uma mensagem em caso de erro ao salvar
    MsgBox "Erro ao salvar arquivo: " & worksheet_name, vbCritical
    Resume Next
End Sub

Sub copiar_base()

    ' Copiar os dados da planilha "Base dados" para a planilha "1. KPI LTA | CJE | CHS"
    Worksheets("Base dados").Range("A2", Range("S" & Rows.Count).End(xlUp)).SpecialCells(xlCellTypeVisible).Copy
    Worksheets("1. KPI LTA | CJE | CHS").Range("A2").PasteSpecial Paste:=xlPasteValues

End Sub

Sub formatar_sla()
    ' Medir o tempo de execução
    Dim inicio As Double
    inicio = Now()
    
    'metodo padrão para melhorar performance
    TurnOffFunctionality
    
    ' Executar os processos principais
    ajustar_tabela
    copiar_base
    exportar_arquivo
    copia_formatacao_modelo lotes
    
    'ativar funcionalidades
    TurnOnFunctionality
    
    ' Mostrar o tempo total de execução do macro
    MsgBox ("O macro demorou: " & Format(Now() - inicio, "hh:mm:ss"))
End Sub
Sub copia_formatacao_modelo(planilhas As Variant)
    Dim sourceWorkbook As Workbook
    Dim destWorkbook As Workbook
    Dim sourceSheet As Worksheet
    Dim destSheet As Worksheet
    Dim sourcePath As String
    Dim destPath As String
    Dim lastRow As Long, lastCol As Long
    
    'Variavel para testar localmente, não esquecer de retirar argumento
    'Dim planilhas As Variant
    'planilhas = Array("LOTE A SP", "LOTE B", "LOTE C", "LOTE A RJ", "LOTE D", "LOTE E", "LOTE T", "LOTE T (CDC)")
    
    For Each planilha In planilhas
        sourcePath = "C:\Users\Administrador\Documents\Alexandre\Modelo\modelo - LOTE E.xlsx"
        destPath = "C:\Users\Administrador\Documents\Alexandre\Lotes\" & planilha & ".xlsx"
        
        ' Open the source and destination workbooks
        Set sourceWorkbook = Workbooks.Open(sourcePath)
        Set destWorkbook = Workbooks.Open(destPath)
        
        ' Set the source and destination worksheets (for example, the first sheet)
        Set sourceSheet = sourceWorkbook.Sheets("LOTE E")
        Set destSheet = destWorkbook.Sheets(1)
        
         ' Get the last row and column with data in the source sheet
        lastRow = sourceSheet.Cells(sourceSheet.Rows.Count, 1).End(xlUp).Row
        lastCol = sourceSheet.Cells(1, sourceSheet.Columns.Count).End(xlToLeft).Column
        
        ' Copy the formatting from the source sheet to the destination sheet
        sourceSheet.Range(sourceSheet.Cells(1, 1), sourceSheet.Cells(lastRow, lastCol)).Copy
        destSheet.Range(destSheet.Cells(1, 1), destSheet.Cells(lastRow, lastCol)).PasteSpecial Paste:=xlPasteFormats
        destSheet.Cells.EntireColumn.AutoFit
        
        ' Close the source workbook without saving
        sourceWorkbook.Close SaveChanges:=False
        
        ' Save the destination workbook
        destWorkbook.Save
        
        ' Close the destination workbook
        destWorkbook.Close SaveChanges:=True
        
        ' Turn off copy mode
        Application.CutCopyMode = False
        
    Next planilha
    
    'MsgBox "Formatting copied successfully!"
End Sub

Sub limpar_base_dados()
    Sheets("Base dados").UsedRange.ClearContents
End Sub


Sub importar_base_dados()
    Dim sourceWorkbook As Workbook
    Dim destinationWorkbook As Workbook
    Dim sourceSheet As Worksheet
    Dim destinationSheet As Worksheet
    Dim sourcePath As String
    Dim lastRow As Long
    Dim lastCol As Long
    Dim file_name As Variant

    ' Specify the file path of the source file
    sourcePath = "C:\Users\Administrador\Documents\Alexandre\"
    file_name = Dir(sourcePath & "*ACOMPANHAMENTO DOS DOCUMENTOS*")
    
    ' Set the destination workbook and sheet (this workbook)
    Set destinationWorkbook = ThisWorkbook
    Set destinationSheet = destinationWorkbook.Sheets("Base dados")
    
    ' Clear destination sheet
    destinationSheet.Cells.Clear
    
    lastRowDest = 1
    firstRowSource = 1
    
    'pega todos os arquivos que tem o file_name
    While file_name <> ""
        ' Open the source workbook
        Set sourceWorkbook = Workbooks.Open(sourcePath & file_name)
        
        ' Set the source sheet
        Set sourceSheet = sourceWorkbook.Sheets("ACOMPANHAMENTO DOS DOCUMENTOS_0")
        
        ' Find the last row and column with data in the source sheet
        lastRow = sourceSheet.UsedRange.Rows(sourceSheet.UsedRange.Rows.Count).Row
        lastCol = sourceSheet.UsedRange.Columns.Count
        
        ' Copy data from the source sheet to the destination sheet
        sourceSheet.Range(sourceSheet.Cells(firstRowSource, 1), sourceSheet.Cells(lastRow, lastCol)).Copy destinationSheet.Cells(lastRowDest, 1)
    
        lastRowDest = destinationSheet.UsedRange.Rows(destinationSheet.UsedRange.Rows.Count).Row + 1
        
        ' Close the source workbook (without saving changes)
        sourceWorkbook.Close False
        
        'Set the fileName to the next file
        file_name = Dir
        
        'variavel para lutar cabecalho
        firstRowSource = 2
    Wend
    
    ' Display a message once the import is done
    'MsgBox "Data imported from " & sourceWorkbook.Name & " to " & destinationSheet.Name
End Sub


' Procedure : TurnOffFunctionality
' Purpose   : Turn off automatic calculations, events and screen updating
Public Sub TurnOffFunctionality()
    Application.DisplayStatusBar = False
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
End Sub

' Procedure : TurnOnFunctionality
' Purpose   : turn on automatic calculations, events and screen updating
Public Sub TurnOnFunctionality()
    Application.DisplayStatusBar = True
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
End Sub

